<?xml version="1.0" encoding="utf-8" ?>
<ResourceDictionary xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:app="clr-namespace:ControlGallery"
             x:Class="StartupKing.Resources.Styles.Styles">
    
        <Color x:Key="Primary">#512BD4</Color>
        <Color x:Key="Secondary">#DFD8F7</Color>
        <Color x:Key="Tertiary">#2B0B98</Color>
        <Color x:Key="Neutral">#969696</Color>
        <Color x:Key="NeutralLighter">#E5E5E1</Color>
        <Color x:Key="NeutralDarker">#505050</Color>
        <Color x:Key="White">#FFFFFF</Color>
        <Color x:Key="Black">#000000</Color>
        <Color x:Key="Accent">#F7B548</Color>
        <Color x:Key="Error">#C00</Color>
        <Color x:Key="Warning">#FFCC00</Color>
        <Color x:Key="Text_Light">#000000</Color>
        <Color x:Key="Text_Dark">#FFFFFF</Color>
        <Color x:Key="TextOnSolid_Light">#FFFFFF</Color>
        <Color x:Key="TextOnSolid_Dark">#000000</Color>
        <Color x:Key="TextSecondary_Light">#1d1d1d</Color>
        <Color x:Key="TextSecondary_Dark">#f1f1f1</Color>

        <Style TargetType="Page" ApplyToDerivedTypes="True">
            <Setter Property="Padding" Value="15"/>
        </Style>

        <!-- SHELL -->
        <Style x:Key="BaseStyle"
           TargetType="Element">
            <Setter Property="Shell.BackgroundColor"
                    Value="{StaticResource Tertiary}" />
            <Setter Property="Shell.ForegroundColor"
                    Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource Black}}" />
            <Setter Property="Shell.TitleColor"
                    Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource Black}}" />
            <Setter Property="Shell.DisabledColor"
                    Value="#B4000000" />
            <Setter Property="Shell.UnselectedColor"
                    Value="#CC0000" />
            <Setter Property="Shell.NavBarHasShadow"
                    Value="False"/>
        </Style>

        <!--<Style TargetType="Shell" ApplyToDerivedTypes="True">
                <Setter Property="FlyoutHeaderTemplate"
                Value="{DataTemplate common:FlyoutHeaderTemplate}"/>
                <Setter Property="FlyoutFooterTemplate"
                Value="{DataTemplate common:FlyoutFooterTemplate}"/>
                <Setter Property="ItemTemplate"
                Value="{DataTemplate common:FlyoutItemTemplate}"/>
                <Setter Property="Shell.FlyoutBehavior" Value="{OnIdiom Tablet=Locked, Desktop=Locked, Default=Flyout}"/>
            </Style>-->

        <Style BasedOn="{StaticResource BaseStyle}"
           ApplyToDerivedTypes="True"
           TargetType="FlyoutItem" />

            <!--
                    Default Styles for all Flyout Items
                    https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#flyoutitem-and-menuitem-style-classes
                    -->
            <Style Class="FlyoutItemLabelStyle" TargetType="Label">
                <Setter Property="TextColor" Value="White"></Setter>
            </Style>
            <Style Class="FlyoutItemLayoutStyle" TargetType="Layout" ApplyToDerivedTypes="True">
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{x:OnPlatform UWP=Transparent, iOS=White}" />
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="{StaticResource Primary}" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Selected">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{StaticResource Primary}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>

            <!--
                    Custom Style you can apply to any Flyout Item
                    -->
            <Style Class="MenuItemLayoutStyle" TargetType="Layout" ApplyToDerivedTypes="True">
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="{StaticResource Primary}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>

    <FontImageSource
                x:Key="CircleIcon"
                FontFamily="FontAwesome"
                Glyph="{x:Static app:IconFont.DotCircle}"
                Color="{AppThemeBinding Dark={StaticResource TextOnSolid_Dark}, Light={StaticResource TextOnSolid_Light}}"
                Size="16"/>

        <FontImageSource
                x:Key="CircleIconDisabled"
                FontFamily="FontAwesome"
                Glyph="{x:Static app:IconFont.DotCircle}"
                Color="{AppThemeBinding Dark={StaticResource TextOnSolid_Dark}, Light={StaticResource TextOnSolid_Light}}"
                Size="16"/>

        <FontImageSource
                x:Key="CircleIconAlt"
                FontFamily="FontAwesome"
                Glyph="{x:Static app:IconFont.DotCircle}"
                Color="{StaticResource Primary}"
                Size="16"/>
        <FontImageSource
                x:Key="CircleIconAltDisabled"
                FontFamily="FontAwesome"
                Glyph="{x:Static app:IconFont.DotCircle}"
                Color="{StaticResource Neutral}"
                Size="16"/>

        <Style TargetType="Label">
            <Setter Property="FontFamily" Value="OpenSansRegular"/>
            <Setter Property="FontSize"
                        Value="17"/>
            <Setter Property="TextColor"
                        Value="{AppThemeBinding
                    Dark={StaticResource Text_Dark},
                    Light={StaticResource Text_Light}}"/>
        </Style>
        <Style TargetType="Label"
                   Class="LargeTitle">
            <Setter Property="FontSize"
                        Value="30"/>
            <Setter Property="FontFamily" Value="OpenSansSemiBold"/>
        </Style>
        <Style TargetType="Label"
                   Class="Title1">
            <Setter Property="FontSize"
                        Value="26"/>
            <Setter Property="FontFamily" Value="OpenSansSemiBold"/>
        </Style>
        <Style TargetType="Label"
                   Class="Headline">
            <Setter Property="FontSize"
                        Value="17"/>
            <Setter Property="FontFamily" Value="OpenSansSemiBold"/>
        </Style>
        <Style TargetType="Label"
                   Class="Subhead">
            <Setter Property="FontSize"
                        Value="15"/>
        </Style>
        <Style TargetType="Label"
                   Class="Footnote">
            <Setter Property="FontSize"
                        Value="13"/>
        </Style>

        <!-- Text Color Styles -->
        <Style TargetType="Label"
                   Class="Secondary">
            <Setter Property="TextColor"
                        Value="{AppThemeBinding
                    Dark={StaticResource TextSecondary_Dark},
                    Light={StaticResource TextSecondary_Light}}"/>
        </Style>
        <Style TargetType="Label"
                   Class="Primary">
            <Setter Property="TextColor"
                        Value="{StaticResource Primary}"/>
        </Style>
        <Style TargetType="Label"
                   Class="Error">
            <Setter Property="TextColor"
                        Value="{StaticResource Error}"/>
        </Style>
        <Style TargetType="Label"
                   Class="Warning">
            <Setter Property="TextColor"
                        Value="{StaticResource Warning}"/>
        </Style>
        <Style TargetType="Label"
                   Class="Disabled">
            <Setter Property="TextColor"
                        Value="{StaticResource Neutral}"/>
        </Style>

        <Style TargetType="Entry">
            <Setter Property="WidthRequest" Value="120"/>
        </Style>

    <Style TargetType="StackLayout">
        <Setter Property="Spacing" Value="10"/>
    </Style>

    <Style TargetType="StackLayout" Class="CheckBoxContainer">
        <Setter Property="Spacing" Value="0"/>
        <Setter Property="Orientation" Value="Horizontal"/>
    </Style>

    <Style TargetType="Button">
        <Setter Property="TextColor" Value="White"></Setter>
        <Setter Property="FontFamily" Value="OpenSansRegular"/>
        <Setter Property="CornerRadius" Value="8"/>
        <Setter Property="Padding" Value="14,10"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal">
                        <VisualState.Setters>
                            <Setter Property="BackgroundColor" Value="{StaticResource Primary}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="BackgroundColor" Value="{StaticResource Neutral}" />
                            <Setter Property="TextColor" Value="White"/>
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="PrimaryButtonOutline">
        <Setter Property="CornerRadius" Value="8"/>
        <Setter Property="Padding" Value="14,10"/>
        <Setter Property="BackgroundColor" Value="Transparent"/>
        <Setter Property="TextColor" Value="{StaticResource Primary}"/>
        <Setter Property="BorderWidth" Value="1"/>
        <Setter Property="BorderColor" Value="{StaticResource Primary}"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="BorderColor" Value="{StaticResource Neutral}" />
                            <Setter Property="TextColor" Value="{StaticResource Neutral}" />
                            <Setter Property="BackgroundColor" Value="Transparent"/>
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="PrimaryButtonOutlineIcon" BasedOn="{StaticResource PrimaryButtonOutline}">
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="ImageSource" Value="{StaticResource CircleIconAltDisabled}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="SecondaryButtonOutline" BasedOn="{StaticResource PrimaryButtonOutline}">
        <Setter Property="Padding" Value="4"/>
    </Style>
    <Style TargetType="Button" x:Key="TertiaryButtonOutline" BasedOn="{StaticResource PrimaryButtonOutline}">
    </Style>
    <Style TargetType="Button" x:Key="BorderlessButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="TextColor" Value="{StaticResource Primary}"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{StaticResource Neutral}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Color
            x:Key="LightRadioButtonColor">#F3F2F1</Color>
    <Color
            x:Key="DarkRadioButtonColor">#9B9A99</Color>

    <ControlTemplate
        x:Key="ImageQualityRadioTemplate">
        <Frame
          BorderColor="{AppThemeBinding Dark={StaticResource DarkRadioButtonColor}, Light={StaticResource LightRadioButtonColor}}"
          BackgroundColor="{AppThemeBinding Dark={StaticResource DarkRadioButtonColor}, Light={StaticResource LightRadioButtonColor}}"
          HasShadow="False"
          HeightRequest="100"
          WidthRequest="100"
          HorizontalOptions="Start"
          VerticalOptions="Start"
          Padding="0">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroupList>
                    <VisualStateGroup
                            x:Name="CheckedStates">
                        <VisualState
                                x:Name="Checked">
                            <VisualState.Setters>
                                <Setter
                                      Property="BorderColor"
                                      Value="#FF3300" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState
                  x:Name="Unchecked">
                            <VisualState.Setters>
                                <Setter
                      Property="BorderColor"
                      Value="#F3F2F1" />
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateGroupList>
            </VisualStateManager.VisualStateGroups>
            <Grid
            Margin="4"
            WidthRequest="100">
                <Grid
              WidthRequest="18"
              HeightRequest="18"
              HorizontalOptions="End"
              VerticalOptions="Start">
                    <Ellipse
                Stroke="#2E2545"
                WidthRequest="16"
                HeightRequest="16"
                StrokeThickness="0.5"
                VerticalOptions="Center"
                HorizontalOptions="Center"
                Fill="White" />
                    <Ellipse
                x:Name="Check"
                WidthRequest="8"
                HeightRequest="8"
                Fill="#2E2545"
                VerticalOptions="Center"
                HorizontalOptions="Center" />
                </Grid>
                <ContentPresenter />
            </Grid>
        </Frame>
    </ControlTemplate>

    <Style
            Class="ImageQuality"
        TargetType="RadioButton">
        <Setter
          Property="ControlTemplate"
          Value="{StaticResource ImageQualityRadioTemplate}" />
    </Style>

    <Style TargetType="StackLayout" Class="SwitchContainer">
        <Setter Property="Spacing" Value="0"/>
        <Setter Property="Orientation" Value="Horizontal"/>
    </Style>

    <Style TargetType="BoxView">
        <Setter Property="Color"
                    Value="Black" />
        <Setter Property="AbsoluteLayout.LayoutFlags"
                    Value="All" />
    </Style>
</ResourceDictionary>